<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>frp内网穿透</title>
      <link href="/diary/2022/02/24/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/diary/2022/02/24/frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<p>说明</p><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><p>原理</p><p>frp 主要由 <strong>客户端(frpc)</strong> 和 <strong>服务端(frps)</strong> 组成，服务端通常部署在具有公网 IP 的机器上，客户端通常部署在需要穿透的内网服务所在的机器上。</p><p>内网服务由于没有公网 IP，不能被非局域网内的其他用户访问。</p><p>用户通过访问服务端的 frps，由 frp 负责根据请求的端口或其他信息将请求路由到对应的内网机器，从而实现通信。</p><p>下载地址</p><p><a href="https://github.com/fatedier/frp/tags">https://github.com/fatedier/frp/tags</a></p><p>启动配置</p><p>编写配置文件，先通过 <code>./frps -c ./frps.ini</code> 启动服务端，再通过 <code>./frpc -c ./frpc.ini</code> 启动客户端。如果需要在后台长期运行，建议结合其他工具使用，例如 <code>systemd</code> 和 <code>supervisor</code>。</p><p>修改 frps.ini 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br></pre></td></tr></table></figure><p>修改 frpc.ini 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br></pre></td></tr></table></figure><p><code>local_ip</code> 和 <code>local_port</code> 配置为本地需要暴露到公网的服务地址和端口。<code>remote_port</code> 表示在 frp 服务端监听的端口，访问此端口的流量将会被转发到本地服务对应的端口。</p><p>分别启动 frps 和 frpc。</p><p>通过 SSH 访问内网机器，假设用户名为 test：</p><p><code>ssh -oPort=6000 test@x.x.x.x</code></p><p>frp 会将请求 <code>x.x.x.x:6000</code> 的流量转发到内网机器的 22 端口。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回文数算法</title>
      <link href="/diary/2022/02/18/%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/diary/2022/02/18/%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="回文数算法"><a href="#回文数算法" class="headerlink" title="回文数算法"></a>回文数算法</h3><p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p>例如，121 是回文，而 123 不是。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 121</span><br><span class="line">输出：true</span><br><span class="line"></span><br><span class="line">输入：x = -121</span><br><span class="line">输出：false</span><br><span class="line">解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br><span class="line"></span><br><span class="line">输入：x = 10</span><br><span class="line">输出：false</span><br><span class="line">解释：从右向左读, 为 01 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure><p>解决方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$num = $x;</span><br><span class="line">$cur = 0;</span><br><span class="line"></span><br><span class="line">while($num != 0) &#123;</span><br><span class="line">$cur = $cur * 10 + $num % 10;</span><br><span class="line">$num = (int)($num / 10);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设$x = 129，按以上代码，$cur和$num会是如下的变动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">12</span><br><span class="line"></span><br><span class="line">92</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">921</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>要把一个数字反转，一个一个数字来看</p><p>129 取余10 得9，剩下了12</p><p>12取余10 得2，剩下了1</p><p>1取余10 得1</p><p>反向计算，每去一位，就得反向进一位，就相当于取到9 ，进行9 * 10 = 90，取到2 ，进行90 * 10，取到900，这样得到了百位数。</p><p>所以每次进行 进位 和 加上取余取到的数就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab-ci安装配置</title>
      <link href="/diary/2021/12/16/gitlab-ci%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/diary/2021/12/16/gitlab-ci%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>1 在项目中添加并编写.gitlab-ci.yml文件</p><p>2 在服务器安装gitlab-runner构建器</p><p>3 推送代码执行构建</p><p>1 文件格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">// 定义总共几部、每一步名称</span><br><span class="line">stages:</span><br><span class="line">  - build</span><br><span class="line">  - push</span><br><span class="line">  - deploy</span><br><span class="line"></span><br><span class="line">// 定义变量, 在下面步骤中可以使用, 项目变量可以在 项目-&gt;设置-&gt;CICD-&gt;变量中设置, 通过$符号访问</span><br><span class="line">variables:</span><br><span class="line">  HARBOR_HOST: ccr.ccs.tencentyun.com</span><br><span class="line">  INAGE_NAME: nginx-agent</span><br><span class="line">  INAGE_NAMESPACE: threecat</span><br><span class="line">  IMAGE_ADDRESS: $HARBOR_HOST/$INAGE_NAMESPACE/$INAGE_NAME:$&#123;CI_COMMIT_REF_NAME&#125;-$&#123;CI_PIPELINE_ID&#125;</span><br><span class="line"></span><br><span class="line">build:</span><br><span class="line">  stage: build</span><br><span class="line">  // tag 在安装runner后，进行register的时候输入，用于过滤，JOB中不包含这个tag，不执行</span><br><span class="line">  tags:</span><br><span class="line">    - nginx-agent</span><br><span class="line">  before_script:</span><br><span class="line">    - echo $USER</span><br><span class="line">  script:</span><br><span class="line">    - docker build -t $IMAGE_ADDRESS .</span><br><span class="line">  only:</span><br><span class="line">    - main</span><br><span class="line"></span><br><span class="line">push:</span><br><span class="line">  stage: push</span><br><span class="line">  tags:</span><br><span class="line">    - nginx-agent</span><br><span class="line">  before_script:</span><br><span class="line">    - docker login $HARBOR_HOST -u $USER_NAME -p $USER_PASS</span><br><span class="line">  script:</span><br><span class="line">    - docker push $IMAGE_ADDRESS</span><br><span class="line">  after_script:</span><br><span class="line">    - docker rmi -f $IMAGE_ADDRESS</span><br><span class="line">  only:</span><br><span class="line">    - main</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  stage: deploy</span><br><span class="line">  tags:</span><br><span class="line">    - nginx-agent</span><br><span class="line">  script:</span><br><span class="line">    - echo success</span><br><span class="line">  only:</span><br><span class="line">    - main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2 安装步骤</p><p>Token和Url在项目-&gt;设置-&gt;CICD-&gt;Runner中获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Download the binary for your system</span><br><span class="line">sudo curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64</span><br><span class="line"></span><br><span class="line"># Give it permissions to execute</span><br><span class="line">sudo chmod +x /usr/local/bin/gitlab-runner</span><br><span class="line"></span><br><span class="line"># Create a GitLab CI user</span><br><span class="line">sudo useradd --comment &#x27;GitLab Runner&#x27; --create-home gitlab-runner --shell /bin/bash</span><br><span class="line"></span><br><span class="line"># Install and run as service</span><br><span class="line">sudo gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner</span><br><span class="line">sudo gitlab-runner start</span><br><span class="line"></span><br><span class="line">sudo gitlab-runner register --url https://gitlab.com/ --registration-token $REGISTRATION_TOKEN</span><br></pre></td></tr></table></figure><p>3 推送代码即可触发。</p>]]></content>
      
      
      <categories>
          
          <category> 未归类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mac上传文件到linux</title>
      <link href="/diary/2021/12/16/mac%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0linux/"/>
      <url>/diary/2021/12/16/mac%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0linux/</url>
      
        <content type="html"><![CDATA[<p>scp   frp_0.33.0_linux_amd64.tar.gz    <a href="mailto:&#114;&#111;&#111;&#116;&#x40;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#51;&#49;&#46;&#54;&#x35;">&#114;&#111;&#111;&#116;&#x40;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#51;&#49;&#46;&#54;&#x35;</a>:~/</p>]]></content>
      
      
      <categories>
          
          <category> 未归类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>转载</title>
      <link href="/diary/2021/12/09/%E8%BD%AC%E8%BD%BD/"/>
      <url>/diary/2021/12/09/%E8%BD%AC%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h4 id="终端显示颜色文字"><a href="#终端显示颜色文字" class="headerlink" title="终端显示颜色文字"></a>终端显示颜色文字</h4><p>转载文章 : <a href="https://blog.csdn.net/u014470361/article/details/81512330">https://blog.csdn.net/u014470361/article/details/81512330</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;\033[1;40;32m color!!! \033[0m hello\n&quot;);</span><br><span class="line"></span><br><span class="line">\033 声明了转义序列的开始。</span><br><span class="line">[ 开始定义颜色。</span><br><span class="line">后面的 1 定义了高亮显示字符。</span><br><span class="line">然后是背景颜色，这里面是40，表示黑色背景。</span><br><span class="line">接着是前景颜色，这里面是32，表示绿色。</span><br><span class="line">\033[0m 关闭转义序列，\033[0m 是终端默认颜色。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">字颜色:30----37</span><br><span class="line">30:黑 </span><br><span class="line">31:红 </span><br><span class="line">32:绿 </span><br><span class="line">33:黄 </span><br><span class="line">34:蓝色 </span><br><span class="line">35:紫色 </span><br><span class="line">36:深绿 </span><br><span class="line">37:白色 </span><br><span class="line"></span><br><span class="line">字背景颜色范围:40----47</span><br><span class="line">40:黑 </span><br><span class="line">41:深红 </span><br><span class="line">42:绿 </span><br><span class="line">43:黄色 </span><br><span class="line">44:蓝色 </span><br><span class="line">45:紫色 </span><br><span class="line">46:深绿 </span><br><span class="line">47:白色</span><br><span class="line"></span><br><span class="line">字体加亮颜色:90----97</span><br><span class="line">90:黑 </span><br><span class="line">91:红 </span><br><span class="line">92:绿 </span><br><span class="line">93:黄 </span><br><span class="line">94:蓝色 </span><br><span class="line">95:紫色 </span><br><span class="line">96:深绿 </span><br><span class="line">97:白色</span><br><span class="line"></span><br><span class="line">背景加亮颜色范围:100----107</span><br><span class="line">40:黑 </span><br><span class="line">41:深红 </span><br><span class="line">42:绿 </span><br><span class="line">43:黄色 </span><br><span class="line">44:蓝色 </span><br><span class="line">45:紫色 </span><br><span class="line">46:深绿 </span><br><span class="line">47:白色</span><br><span class="line"></span><br><span class="line">ANSI控制码的说明 </span><br><span class="line"></span><br><span class="line">\33[0m 关闭所有属性 </span><br><span class="line">\33[1m 设置高亮度 </span><br><span class="line">\33[4m 下划线 </span><br><span class="line">\33[5m 闪烁 </span><br><span class="line">\33[7m 反显 </span><br><span class="line">\33[8m 消隐 </span><br><span class="line">\33[30m -- \33[37m 设置前景色 </span><br><span class="line">\33[40m -- \33[47m 设置背景色 </span><br><span class="line">\33[nA 光标上移n行 </span><br><span class="line">\33[nB 光标下移n行 </span><br><span class="line">\33[nC 光标右移n行 </span><br><span class="line">\33[nD 光标左移n行 </span><br><span class="line">\33[y;xH设置光标位置 </span><br><span class="line">\33[2J 清屏 </span><br><span class="line">\33[K 清除从光标到行尾的内容 </span><br><span class="line">\33[s 保存光标位置 </span><br><span class="line">\33[u 恢复光标位置 </span><br><span class="line">\33[?25l 隐藏光标 </span><br><span class="line">\33[?25h 显示光标</span><br></pre></td></tr></table></figure><p>当前主题</p><p><a href="https://github.com/jbreckmckye/hexo-theme-octo">https://github.com/jbreckmckye/hexo-theme-octo</a></p>]]></content>
      
      
      <categories>
          
          <category> 未归类 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang常见问题</title>
      <link href="/diary/2021/12/09/Golang%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/diary/2021/12/09/Golang%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="go-mod-download下载模块异常"><a href="#go-mod-download下载模块异常" class="headerlink" title="go mod download下载模块异常"></a>go mod download下载模块异常</h4><p>报如下错误 go.mod file not found in current directory or any parent directory，错误原因，命令执行的当前目录层级不对，检查mod文件是否在当前目录下或者父级目录下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go: cannot match &quot;all&quot;: go.mod file not found in current directory or any parent directory; see &#x27;go help modules&#x27;</span><br></pre></td></tr></table></figure><h4 id="module-declares-its-path-as-第三方包无法安装问题"><a href="#module-declares-its-path-as-第三方包无法安装问题" class="headerlink" title="module declares its path as 第三方包无法安装问题"></a>module declares its path as 第三方包无法安装问题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go get: github.com/sanmiaohub/go-tools@v1.0.0: parsing go.mod:</span><br><span class="line">        module declares its path as: go-tools</span><br><span class="line">                but was required as: github.com/sanmiaohub/go-tools</span><br></pre></td></tr></table></figure><p>出现这种问题是go.mod的module设置错误，作为第三方包，对应的module为 github.com/sanmiaohub/go-tools 不应该按项目名为 go-tools。</p><p>我自己建立的两个项目，一个为项目，一个为第三方包，go.mod按以下方式设置。</p><p>项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module dsc</span><br><span class="line"></span><br><span class="line">go 1.16</span><br><span class="line"></span><br><span class="line">require (</span><br><span class="line">github.com/sanmiaohub/go-tools v1.0.2 // indirect</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>第三方包（自己的）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module github.com/sanmiaohu/go-tools</span><br><span class="line"></span><br><span class="line">go 1.17</span><br></pre></td></tr></table></figure><h4 id="日志logging实现方式"><a href="#日志logging实现方式" class="headerlink" title="日志logging实现方式"></a>日志logging实现方式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 终端输出</span><br><span class="line">write, err := os.Stdout.Write([]byte(&quot;ssssss&quot;))</span><br><span class="line">// 文件写入</span><br><span class="line">file,err :=os.OpenFile(&quot;log1.json&quot;,os.O_WRONLY|os.O_APPEND|os.O_CREATE, os.ModeAppend|os.ModePerm)</span><br><span class="line">i,err := file.Write([]byte(&quot;&#123;\&quot;d11111sds\&quot;:\&quot;dsgssssfgg\&quot;&#125;&quot;))</span><br></pre></td></tr></table></figure><p>可以是通过配置来获取按哪种方式去记录日志，记录的文本风格，按interface去实现多种风格</p><h4 id="GOLANG设置代理"><a href="#GOLANG设置代理" class="headerlink" title="GOLANG设置代理"></a>GOLANG设置代理</h4><p>在 Linux 或 macOS 上面，需要运行下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启用 Go Modules 功能</span><br><span class="line">export GO111MODULE=on</span><br><span class="line"># 配置 GOPROXY 环境变量</span><br><span class="line">export GOPROXY=https://goproxy.io</span><br></pre></td></tr></table></figure><p>如果你使用的 Go 版本&gt;=1.13, 你可以通过设置 GOPRIVATE 环境变量来控制哪些私有仓库和依赖(公司内部仓库)不通过 proxy 来拉取，直接走本地，设置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.io,direct</span><br><span class="line"># 设置不走 proxy 的私有仓库，多个用逗号相隔</span><br><span class="line">go env -w GOPRIVATE=*.corp.example.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常见问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git常见问题</title>
      <link href="/diary/2021/12/09/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/diary/2021/12/09/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="git删除本地和远程tag"><a href="#git删除本地和远程tag" class="headerlink" title="git删除本地和远程tag"></a>git删除本地和远程tag</h4><p>删除本地tag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d tag-name</span><br></pre></td></tr></table></figure><p>删除远程tag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :refs/tags/tag-name</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常见问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Centos环境安装Jenkins</title>
      <link href="/diary/2021/12/08/%E5%9C%A8Centos%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85Jenkins/"/>
      <url>/diary/2021/12/08/%E5%9C%A8Centos%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85Jenkins/</url>
      
        <content type="html"><![CDATA[<p>按以下步骤进行操作，操作环境Centos8.4，启动后，默认的端口号为8080，使用<a href="http://ip:8080/">http://IP:8080</a> 即可访问进行初始化设置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install java-1.8.0-openjdk</span><br><span class="line"></span><br><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo</span><br><span class="line"></span><br><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br><span class="line"></span><br><span class="line">sudo dnf install jenkins</span><br><span class="line"></span><br><span class="line">sudo systemctl start jenkins</span><br><span class="line"></span><br><span class="line">sudo systemctl enable jenkins</span><br><span class="line"></span><br><span class="line">systemctl status jenkins</span><br><span class="line"></span><br><span class="line">配置文件地址</span><br><span class="line">/etc/sysconfig/jenkins</span><br><span class="line"></span><br><span class="line">安装家目录</span><br><span class="line">JENKINS_HOME=/var/lib/jenkins</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Centos </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常见问题</title>
      <link href="/diary/2021/12/08/Linux%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/diary/2021/12/08/Linux%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>1.env 获取所有环境变量 值为key=value列表</p><p>2 目录树状显示 tree -d -L 4 ci-cd </p><ul><li>-L level 限制目录显示层级。</li><li>-d 显示目录名称而非内容。</li><li>ci-cd 显示的目录及目录下的东西</li></ul><p>3 安装supervisor</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum install supervisor</span><br><span class="line"></span><br><span class="line">systemctl enable supervisord.service # 开机自启动</span><br><span class="line">systemctl start supervisord.service # 启动supervisord服务</span><br><span class="line">systemctl status supervisord.service # 查看supervisord服务状态</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">frp.ini</span><br><span class="line"></span><br><span class="line">[frp-client]</span><br><span class="line">command = frpc -c frpc.ini</span><br><span class="line">directory = /root/frp/</span><br><span class="line">user = root</span><br><span class="line">stopsignal = INT  </span><br><span class="line">autostart = true</span><br><span class="line">autorestart = true</span><br><span class="line">startsecs = 1</span><br><span class="line">stderr_logfile = /var/log/frp-client.err.log</span><br><span class="line">stdout_logfile = /var/log/frp-client.out.log</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常见问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker常见问题</title>
      <link href="/diary/2021/12/08/Docker%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/diary/2021/12/08/Docker%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="docker-–privileged-true-参数作用"><a href="#docker-–privileged-true-参数作用" class="headerlink" title="docker –privileged=true 参数作用"></a>docker –privileged=true 参数作用</h4><p>简单来说，就是增加容器的扩展特权，docker将允许访问主机上的所有设备。使用该参数，container内的root拥有真正的root权限，否则，container内的root只是外部的一个普通用户权限。</p><h4 id="容器执行sh文件无权限-sh-Permission-denied"><a href="#容器执行sh文件无权限-sh-Permission-denied" class="headerlink" title="容器执行sh文件无权限 sh: Permission denied"></a>容器执行sh文件无权限 sh: Permission denied</h4><p>在Dockerfile中添加如下代码。USER帮助你切换到指定用户而已，改变之后以此身份执行 <code>RUN</code>, <code>CMD</code> 以及 <code>ENTRYPOINT</code> 命令。Chmod用来给文件读写执行权限。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USER</span> root</span><br><span class="line">chmod <span class="number">0755</span> 文件</span><br></pre></td></tr></table></figure><h4 id="Docker-ps显示完整容器相关信息"><a href="#Docker-ps显示完整容器相关信息" class="headerlink" title="Docker ps显示完整容器相关信息"></a>Docker ps显示完整容器相关信息</h4><p>通过下面的命令获取所有容器的相关信息，一般COMMAND会被遮挡，用此命令可以看到完整的信息。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a --no-trunc</span><br><span class="line"></span><br><span class="line">a213efc42bd6   threecat/dsc:api   <span class="string">&quot;/bin/sh -c &#x27;sh /go/bin/start.sh $&#123;RUN_MODE&#125;&#x27;&quot;</span>   <span class="number">44</span> hours ago   Up <span class="number">8</span> hours   <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8082</span>-&gt;<span class="number">80</span>/tcp     dsc-api</span><br><span class="line"></span><br><span class="line"><span class="number">65</span>a8296880e4   <span class="number">3</span>f06de256c3c       <span class="string">&quot;docker-php-entrypoint php-fpm -F&quot;</span>               <span class="number">3</span> weeks ago    Up <span class="number">8</span> hours   <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">9000</span>-&gt;<span class="number">9000</span>/tcp   mod-public</span><br></pre></td></tr></table></figure><h4 id="Dockerfile中CMD无法获取build-arg构建传递的数据"><a href="#Dockerfile中CMD无法获取build-arg构建传递的数据" class="headerlink" title="Dockerfile中CMD无法获取build-arg构建传递的数据"></a>Dockerfile中CMD无法获取build-arg构建传递的数据</h4><p>Arg数据只能在构建时使用，而CMD在运行容器时执行。想要实现的方法是在Dockerfile中使用ENV设置环境变量，运行容器的时候执行sh脚本，去读取环境变量即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM alpine:latest</span><br><span class="line"></span><br><span class="line">ARG MOD=api</span><br><span class="line"></span><br><span class="line">ENV RUN_MODE $&#123;MOD&#125;</span><br><span class="line"></span><br><span class="line">CMD sh /go/bin/start.sh $&#123;RUN_MODE&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常见问题 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
